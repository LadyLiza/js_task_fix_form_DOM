{"mappings":"AAAA,4BAA4B,GAC5B;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,OAAO,OAAO,CAAC,CAAC;IACd,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,SAAS,GAAG;IAClB,MAAM,OAAO,GAAG,MAAM,EAAE;IAExB,MAAM,gBAAgB,YAAY,MAAM,IAAI;IAE5C,MAAM,WAAW,GAAG;IACpB,MAAM,WAAW,GAAG;IAEpB,MAAM,UAAU,CAAC,YAAY,CAAC,OAAO;AACvC;AAEA,SAAS,YAAY,IAAI;IACvB,OAAO,KACJ,OAAO,CAAC,mBAAmB,SAC3B,OAAO,CAAC,MAAM,CAAA,MAAO,IAAI,WAAW;AACzC","sources":["src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-shadow */\n'use strict';\n\nconst inputs = document.querySelectorAll('form input');\n\ninputs.forEach((input) => {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n\n  const formattedName = formatLabel(input.name);\n\n  label.textContent = formattedName;\n  input.placeholder = formattedName;\n\n  input.parentNode.insertBefore(label, input);\n});\n\nfunction formatLabel(name) {\n  return name\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/^./, str => str.toUpperCase());\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}